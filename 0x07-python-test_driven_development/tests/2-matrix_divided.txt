>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided("Holberton", 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[None, 2, 8],[1, 2, 3]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[4, 2, 8],[1, (1, 2), 3]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [1, 2, 4, 5]], 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> len(__import__("2-matrix_divided").__doc__) > 0
True

>>> len(__import__("2-matrix_divided").matrix_divided.__doc__) > 0
True

>>> import os
>>> os.system("pep8 2-matrix_divided.py")
0

>>> os.popen('head -1 2-matrix_divided.py').read()
'#!/usr/bin/python3\n'
